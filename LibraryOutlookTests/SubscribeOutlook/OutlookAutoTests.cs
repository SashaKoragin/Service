using System;
using System.Collections.Generic;
using System.Linq;
using Domino;
using LibaryXMLAuto.Inventarization.ModelComparableUserAllSystem;
using LibaryXMLAuto.ReadOrWrite;
using LibraryOutlook.SubscribeOutlook;
using LotusLibrary.DbConnected;
using LotusLibrary.ImnsComparableUser;
using LotusLibrary.MailSender;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LibraryOutlookTests.SubscribeOutlook
{
    [TestClass()]
    public class OutlookAutoTests
    {
        [TestMethod()]
        public void StartMessageOITTest()
        {
            OutlookAutoPop3 outlook = new OutlookAutoPop3();
            outlook.StartMessageOit(new LibraryOutlook.ConfigFile.ConfigFile());
        }


        [TestMethod()]
        public void StartMessageTest()
        {
            OutlookAutoPop3 outlook = new OutlookAutoPop3();
            outlook.StartMessageR7751(new LibraryOutlook.ConfigFile.ConfigFile());
        }
        [TestMethod()]
        public void TestLotusServer()
        {
            MailSender mail = new MailSender();
            mail.SendMailIn(null, null);
        }

        [TestMethod()]
        public void TestDocumentView()
        {
            ImnsComparableUser modelImns = new ImnsComparableUser();
            var model = modelImns.FindAllUsersAndAttribute();
            var t =  model.FullModelUserAllSystem.Where(x => x.Surname == "Иванов").FirstOrDefault();
            modelImns.Dispose();
        }

        [TestMethod()]
        public void Dxl()
        {
            LotusConnectedDataBase db = new LotusConnectedDataBase("12345");
            var lotusMail = db.LotusConnectedDataBaseServer("Lotus7751/I7751/R77/МНС", "mail\\акоряг.nsf");
            var streame = db.Session.CreateStream();
            var filename = $"d:\\Test2.dxl";
            var docs = lotusMail.Search("Select($MessageID= \"<OF48F1D289.7607B3B0-ON4325857E.0041458C-4325857E.004145A7@LocalDomain>\")", null, 0);
            NotesDXLExporter export = db.Session.CreateDXLExporter();
            var t = export.Export(docs.GetFirstDocument());
            System.IO.File.WriteAllText(filename, t);
        }

        [TestMethod()]
        public void StartMessageTest1()
        {
            LibraryOutlook.ConfigFile.ConfigFile Parameters = new LibraryOutlook.ConfigFile.ConfigFile();
            OutlookAutoPop3 t = new OutlookAutoPop3();
            t.StartMessageR7751(Parameters);
        }
        [TestMethod()]
        public void FindUserLotus()
        {
            var smtp = new OutlookAutoSmtp();
            smtp.SendSmtpMessageOit(new LibraryOutlook.ConfigFile.ConfigFile());
        }
        [TestMethod()]
        public void TestSendReportConsultant()
        {
            try
            {
                var smtp = new OutlookAutoSmtp();
                smtp.SendSmtpConsultantPlusReport(new LibraryOutlook.ConfigFile.ConfigFile());
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
        }

        [TestMethod()]
        public void TestAddDocumentReplace()
        {
            var session = new NotesSession();
            session.Initialize("12345");
            var HtmlBody = session.CreateStream();
            var path = @"D:\Вложение 10.zip";
            var mailBody = @"<div><br/>
                               </div><div>
                    <br/>
                    </div>
                    <div class=""c611af8754f78aa8normalize"">
                    <div><div><div><div>Добрый день!</div>
                    <div>Реквизиты:</div>
                    <div>Валюта получаемого перевода: Рубли(RUB)</div>
                    <div>Получатель: НОВИКОВ АЛЕКСЕЙ ВАЛЕРЬЕВИЧ</div>
                    <div>Номер счёта: 
                    <span class=""1f1ea193f6735cf0wmi-callto"">40817810038180282453</span>
                    </div><div>Банк получателя: ПАО СБЕРБАНК</div>
                    <div>БИК: 
                    <span class=""1f1ea193f6735cf0wmi-callto"">044525225</span>
                    </div><div>Корр.счёт: <span class=""1f1ea193f6735cf0wmi-callto"">30101810400000000225</span></div>
                    <div>ИНН: <span class=""1f1ea193f6735cf0wmi-callto"">7707083893</span>
                    </div><div>КПП: <span class=""1f1ea193f6735cf0wmi-callto"">773643001</span>
                    </div><div>SWIFT-код: SABRRUMM</div><div> </div><div>С уважением,</div>
                    <div>Алексей Новиков</div></div></div></div></div><div><br /></div><div>
                    <br /></div><div><br /></div><div><br /></div>
                    <div class=""86e3a5cbc83439f6js-compose-signature""></div><div><br />
                    </div>";
            var db = session.GetDatabase("Lotus7751/I7751/R77/МНС", "mail\\акоряг.nsf", false);
            var document = db.CreateDocument();
            //  document.ComputeWithForm(true,)
            document.AppendItemValue("Subject", "Тема");
            document.AppendItemValue("Recipients", "Алекcандр Сергеевич Корягин/I7751/R77/МНС@MNS_R77");
            document.AppendItemValue("OriginalTo", "Алекcандр Сергеевич Корягин/I7751/R77/МНС@MNS_R77");
            document.AppendItemValue("From", "Алекcандр Сергеевич Корягин/I7751/R77/МНС@MNS_R77");
            document.AppendItemValue("OriginalFrom", "Алекcандр Сергеевич Корягин/I7751/R77/МНС@MNS_R77");
            document.AppendItemValue("SendTo", "Алекcандр Сергеевич Корягин/I7751/R77/МНС@MNS_R77");


            //  document.AppendItemValue("Body","");
            var MIMEEntity = document.CreateMIMEEntity("Body");

            var MimeHeader = MIMEEntity.CreateHeader("MIME-Version");
            MimeHeader.SetHeaderVal("1.0");

            MimeHeader = MIMEEntity.CreateHeader("Content-Type");
            MimeHeader.SetHeaderValAndParams("multipart/mixed");

            var MimeChilds = MIMEEntity.CreateChildEntity();
            HtmlBody.WriteText(mailBody);
            
            MimeChilds.SetContentFromText(HtmlBody, "text/html;charset=\"utf-8\"", Domino.MIME_ENCODING.ENC_NONE);
            MimeChilds = MIMEEntity.CreateChildEntity();


            
            HtmlBody = session.CreateStream();
            HtmlBody.Open(path, "");
            MimeHeader = MimeChilds.CreateHeader("Content-Disposition");

            MimeHeader.SetHeaderVal("attachment; filename=\"16.03.2020_09.35.31_e.safonov.r7700.zip\"");
            MimeChilds.SetContentFromBytes(HtmlBody, "application/zip; name=\"16.03.2020_09.35.31_e.safonov.r7700.zip\"", Domino.MIME_ENCODING.ENC_IDENTITY_BINARY);
           
          
            document.CloseMIMEEntities(true);
            
            session.ConvertMime = true;
            document.CloseMIMEEntities(true);
            if (document.ComputeWithForm(true, false))
            {
                document.Save(true, true);
                document.Send(false);
            }
        }

        [TestMethod()]
        public void TestFindZg()
        {
            var modelInn = "712202368808/503006891433/080200716924/400402272365/773123705017/772155235059/771120941492/505302932108/400703343482/253696365283/772800464827/772634512197/772634512197/026829728740/143500178300/370100022635/773126469752/370701951938/616613305372/772863139065/290210589177/782506799166/782506799166/732700086679/325203131305/540524812305/500303429106/070105878492/502103129074/253608557408/503606707407/772509066604/212913603773/212913603773/501209738853/500112290598/550703126852/110310416865/742402572599/505101196930/504906690795/560600022382/503011763606/503011763606/503011763606/503011763606/631903303116/503017432590/771903095217/711107049768/330500880907/744600225985/772370378122/422101788890/773202808375/010509583760/360406959122/132812988326/490904064060/463305740565/040801314766/500306579660/072196689704/434500132010/770470553705/507404786019/246001696801/212304905871/270322677894/253908002414/410100890763/771413377029/773200032707/505004812870/231406595926/771989065123/561208460522/501000078059/501000078059/501000078059/773409843344/772732933073/422207193290/860212373090/744514112385/540517236499/370201701150/233408721665/672204795984/503014155860/056102864098/482603812135/165039004215/381005381632/501303734782/501303734782/501303734782/322102392143/772880162716/772880162716/773303895906/645207799743/781803164199/773000105041/190113774421/507461319660/861200293701/861200293701/502709372510/772380835473/332890560100/143511457390/682600238849/616114031486/330570133514/673202076305/340802271200/550724563229/550724563229/744800190715/771470431385/670600029980/213007341342/502904666747/620803018773/132600649071/261407890296/504204187238/431201852590/770203617963/593302595537/772637013245/772637013245/503011736190/503009689264/500511530604/500511530604/771603750129/026603116552/502802797243/502802797243/502802797243/402708742452/772872488658/401900631851/623100591721/540129910277/771312182231/771312182231/720414074506/720414074506/772465211604/772465203508/470521578501/503012824562/361800774805/212301191259/771411672893/332707797840/614770545571/164901452321/771600795354/860805339597/253302557390/614405047536/540706501537/504600070219/771471579391/210801013349/503012846301/632139646381/501709772299/720411611960/507461283149/507461352307/263406979851/753615410657/561208372107/142315741406/166017966027/166017966027/166017966027/343901840043/421718974140/773412029350/503214883507/774317912984/503008413344/503008413344/503008413344/503110591820/773001740127/503800934986/482510449663/772707330138/272700464749/272700464749/540443431319/540443431319/661501835141/631935315450/694301587707/772800505456/502240546143/502240546143/502240546143/507400120179/504600815479/366315561744/371100142557/672901308740/772791297831/332100546884/500345576984/504907064293/143524598014/575403104352/212410605936/270600066902/482511924671/695205465063/695205465063/695205465063/503018168067/636705442572/212501760801/611701063250/400703317700/503012594968/502602918363/502602918363/505100078236/731101339590/366501165635/773128346266/773128346266/572600313198/271003442979/341011696730/054600920633/681868930071/644200120431/344305484124/781135615280/632131982920/100122761904/402500262930/782514450361/245731044807/773272523246/550508893159/771595497790/771708498325/771000320990/771000320990/771000320990/503407014535/500344789041/507461941944/772882523421/773200136304/773203985899/773273210246/644009412304/773270081000/773578212181/773301411349/772700274808/770202495543/500303081154/771872638911/771977675068/507460670515/507460670515/501906749203/861200471305/990102389902/682902155839/682902155839/682902155839/500306783497/501902070594/380414031154/502771118347/860326210349/860806939607/262518179876/774385098890/774385098890/774385098890/774385098890/130102657527/772400659155/772864834181/236002301954/561406177732/504601754677/504602364091/504602364091/504602364091/507403802363/504602533705/504601594720/500307146853/500307824386/504602150149/502725784889/401108874159/772983295620/025500181967/501814619589/165126724682/507405054466/132603878418/683304852433/500310427967/500307701296/504602198052/504602701420/504602701420/500307640445/504601154430/032600557205/772339933279/213003064810/501104578747/165205152438/522301807550/593400509776/561210939658/507402527957/507461389794/612204035343/771379034580/503612350988/760804748273/774314035703/151502661963/771474987134/281801331700/773774767535/772743009410/602201422637/560306911323/730690175186/503007972766/503012778725/254010381945/402708957994/772465054006/860903593471/331201030660/631505651700/695010443565/732390146692/501213140992/402201825775/502482428406/540125418530/434559997253/502806361659/773671083734/503821191731/772387179301/772386263776/775101253258/775101210631/775101210631/775101402284/772171256698/772171256698/261505821685/261505821685/261505821685/504226940913/502499042601/503126061667/772171749164/860244111210/773391102825/775100227537/775101669880/771532056909/772407478694/762103460579/237401635100/774336616966/402917141790/772990188347/773415275315/773393866110/760806247441/770975275714/771892926019/771892926019/771554851153/775103996474/775104214909/910906952659/772992460830/164515733543/572601435664/772992699724/775105208087/645328933827/645328933827/481603552598/772798930299/772798930299/401111126900/501910424279/772993601178/911005187651/480210778864/775107072106/971504589210/775107538732/622602796840/775107687815/503022076203/771688915874/775111677834/775111710746/402001698992/402001698992/402001698992/402001698992/402001698992/402001698992/775118475562/771897654312/772427988372/772427988372/772427988372/773583644765/775124284774/772278528009/775125181919/772096535386/775127004295/775127004295/775103521270/695018099297/775133923508/775143764180/775143764180/775143764180/775149023189/7728794320/7724722998/5051005461/7729526161/7716509585/7716509585/7716509585/5046073730/5003054853/7825706086/5003009280/7706404350/7736037394/7724541889/7704243980/7736224644/7734227946/7704550388/6730079815/7724546679/5046070049/7709727230/5030025516/5030025516/5003006930/5074023107/5074007257/7130014864/6453054397/7714704125/7709516895/7719191685/7731237390/5074000519/7701961968/7751513464/5001097298/7725849612/7751500578/5001098510/7751002460/7728311290/7727274293/7751017219/7725317128/7327080014/7751038593/7728378263/7728378263/7728378263/7728396054/7751144915/3460074952/7751156879/9718132539/6726025207/7751163883/7724489406/5261126247/7751177847/9703023505/7751190284/7751191256/7751194546/7751196705/7751196705/7751215080/7751215080/7751218525/9701202820/7751221976/7751221976/7733383935/7751231004/7751245695/7751246353/9714006340/7751251297/7751251297/7751255862";           
            var model = modelInn.Split('/');
            var xml = new XmlReadOrWrite();
            var imns = new ImnsComparableUser();
            var zg = imns.FindLotusNotesZg(model);
            xml.CreateXmlFile("D:\\Testing\\Zg.xml", zg, zg.GetType());
        }

    }
}